{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from './../_models/user';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _jwtHelper = new JwtHelperService();\n  private _authUrl = environment.apiUrl + 'auth/';\n  private _isLoggedInSubject: BehaviorSubject<boolean>;\n  public isLoggedIn$: Observable<boolean>;\n  private _loggedInUserBasicInfoSubject: BehaviorSubject<User>;\n  public loggedInUserBasicInfo$: Observable<User>;\n  private _undecodedTokenSubject: BehaviorSubject<User>;\n  public undecodedToken$: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this._isLoggedInSubject = new BehaviorSubject<boolean>(false);\n    this.isLoggedIn$ = this._isLoggedInSubject.asObservable();\n    this._loggedInUserBasicInfoSubject = new BehaviorSubject<User>({});\n    this.loggedInUserBasicInfo$ = this._loggedInUserBasicInfoSubject.asObservable();\n    this._undecodedTokenSubject = new BehaviorSubject<User>({});\n    this.undecodedToken$ = this._undecodedTokenSubject.asObservable();\n   }\n\n   checkLoginStatus() {\n    this._isLoggedInSubject.next(false);\n    const token = localStorage.getItem('currentToken');\n    if (token) {\n      if (!this._jwtHelper.isTokenExpired(token)) {\n        this.setLoggedInUserBasicInfo(token);\n        this._isLoggedInSubject.next(true);\n      } else {\n        localStorage.removeItem('currentToken');\n      }\n    }\n    return;\n  }\n\n  login(model: any) {\n    return this.http.post(this._authUrl + 'login', model).pipe(\n      map( (response: any) => {\n        if (response) {\n          localStorage.setItem('currentToken', response.token);\n          this.setLoggedInUserBasicInfo(response.token);\n          this._isLoggedInSubject.next(true);\n        }\n      })\n    );\n  }\n\n  setLoggedInUserBasicInfo(token: any) {\n    this._undecodedTokenSubject.next(token);\n    const dt = this._jwtHelper.decodeToken(token);\n    const user: User = { id: dt.nameid, knownAs: dt.unique_name, roles: dt.role, email: dt.email };\n    this._loggedInUserBasicInfoSubject.next(user);\n  }\n\n  logout() {\n      localStorage.removeItem('currentToken');\n      this._isLoggedInSubject.next(false);\n      this._loggedInUserBasicInfoSubject.next(null);\n      this._undecodedTokenSubject.next(null);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".my-logo {\\n    margin-right: 0.375rem;\\n}\\n.sidenav-top {\\n    width: 100%;\\n    padding: 1rem;\\n    height: 10rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7Q0FDMUI7QUFDRDtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2QsY0FBYztDQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWxvZ28ge1xuICAgIG1hcmdpbi1yaWdodDogMC4zNzVyZW07XG59XG4uc2lkZW5hdi10b3Age1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgaGVpZ2h0OiAxMHJlbTtcbn0iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"main-container\\\">\\n  \\n  <!--  -->\\n  <div class=\\\"alert alert-app-level\\\">\\n      \\n  </div>\\n  \\n  <!--  -->\\n  <header class=\\\"header header-6\\\">\\n    <div class=\\\"branding\\\">\\n      <a href=\\\"...\\\" class=\\\"nav-link\\\">\\n          <img class=\\\"my-logo\\\" alt=\\\"Customer Portal Logo\\\" src=\\\"../assets/bolt2.png\\\">\\n          <span class=\\\"title\\\">Customer Portal</span>\\n      </a>\\n    </div>\\n    <div class=\\\"header-actions\\\" *ngIf=\\\"isLoggedIn\\\">\\n      <clr-dropdown>\\n        <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n          <clr-icon shape=\\\"user\\\"></clr-icon>\\n          <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n        </button>\\n        <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\n          <a href=\\\"...\\\" clrDropdownItem>About</a>\\n          <a href=\\\"...\\\" clrDropdownItem>Preferences</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a href=\\\"...\\\" clrDropdownItem>Log out</a>\\n        </clr-dropdown-menu>\\n      </clr-dropdown>\\n    </div>\\n  </header>\\n  \\n  <!--  -->\\n  <div class=\\\"content-container\\\">\\n\\n    <app-login *ngIf=\\\"!isLoggedIn\\\"></app-login>\\n      \\n    <div class=\\\"content-area\\\" *ngIf=\\\"isLoggedIn\\\">\\n      <p>the main content here</p>\\n      <router-outlet></router-outlet>\\n    </div>\\n      \\n    <nav class=\\\"sidenav\\\" *ngIf=\\\"isLoggedIn\\\">\\n\\n      <section class=\\\"sidenav-top\\\">\\n        <div>gravatar and name here</div>\\n      </section>\\n\\n      <section class=\\\"sidenav-content\\\">\\n        <a href=\\\"...\\\" class=\\\"nav-link active\\\"><clr-icon shape=\\\"list\\\"></clr-icon>  Contracts</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"bank\\\"></clr-icon>  Banking Details</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"details\\\"></clr-icon>  Personal Details</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"memory\\\"></clr-icon>  Meter Readings</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"envelope\\\"></clr-icon>  Mail</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"help\\\"></clr-icon>  Support</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"book\\\"></clr-icon>  Knowledge Base</a>\\n        <a href=\\\"...\\\" class=\\\"nav-link\\\"><clr-icon shape=\\\"file\\\"></clr-icon>  All Documents</a>\\n      </section>\\n\\n    </nav>\\n\\n  </div>\\n\\n</div>\\n\\n\\n\"","import { AuthService } from './_services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  isLoggedIn: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.doInitialChecks();\n  }\n\n  doInitialChecks() {\n    this.authService.checkLoginStatus();\n    this.authService.isLoggedIn$.subscribe(value => {\n      this.isLoggedIn = value;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthService } from './_services/auth.service';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".login-card {\\n    position:fixed;\\n    top: 50%;\\n    left: 50%;\\n    padding: 2em;\\n    width:22em;\\n    height: 30em;\\n    margin-left: -11em; /*set to a negative number 1/2 of your width*/ \\n    margin-top: -15em; /*set to a negative number 1/2 of your height*/\\n    \\n}\\n\\n.header-subtitle {\\n    font-size: 0.7em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixTQUFTO0lBQ1QsVUFBVTtJQUNWLGFBQWE7SUFDYixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQixDQUFDLDhDQUE4QztJQUNsRSxrQkFBa0IsQ0FBQywrQ0FBK0M7O0NBRXJFOztBQUVEO0lBQ0ksaUJBQWlCO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jYXJkIHtcbiAgICBwb3NpdGlvbjpmaXhlZDtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgcGFkZGluZzogMmVtO1xuICAgIHdpZHRoOjIyZW07XG4gICAgaGVpZ2h0OiAzMGVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtMTFlbTsgLypzZXQgdG8gYSBuZWdhdGl2ZSBudW1iZXIgMS8yIG9mIHlvdXIgd2lkdGgqLyBcbiAgICBtYXJnaW4tdG9wOiAtMTVlbTsgLypzZXQgdG8gYSBuZWdhdGl2ZSBudW1iZXIgMS8yIG9mIHlvdXIgaGVpZ2h0Ki9cbiAgICBcbn1cblxuLmhlYWRlci1zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiAwLjdlbTtcbn0iXX0= */\"","module.exports = \"<div class=\\\"login-card\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-5 col-md-8 col-sm-12 col-xs-12\\\">\\n        <div class=\\\"card\\\">\\n            \\n          <div class=\\\"card-header\\\">\\n            <div class=\\\"header-title\\\">Login</div>\\n            <div class=\\\"header-subtitle\\\">Please login with your credentials</div>\\n          </div>\\n          \\n          <div class=\\\"card-block\\\">\\n            <div class=\\\"card-text\\\">\\n              <form clrForm clrLayout=\\\"vertical\\\" #loginForm=\\\"ngForm\\\" id=\\\"loginForm\\\">\\n                \\n                <clr-input-container>\\n                  <label>Email</label>\\n                  <input clrInput type=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" required/>\\n                  <clr-control-helper>Please enter your email address</clr-control-helper>\\n                  <clr-control-error *clrIfError=\\\"'required'\\\">Email is <strong>required</strong></clr-control-error>\\n                </clr-input-container>\\n\\n                <clr-input-container>\\n                  <label>Password</label>\\n                  <input clrInput type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required minlength=\\\"8\\\"/>\\n                  <clr-control-helper>Please enter your passsword</clr-control-helper>\\n                  <clr-control-error *clrIfError=\\\"'required'\\\">Password is <strong>required</strong></clr-control-error>\\n                  <clr-control-error *clrIfError=\\\"'minlength'\\\">Password must be at least 8 chracters long</clr-control-error>\\n                </clr-input-container>\\n\\n            </form>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-primary\\\" form=\\\"loginForm\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n          </div>\\n\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: any = {};\n\n  constructor(private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      response => {\n        this.toastr.success('You have logged in successfully');\n      },\n      (error: HttpErrorResponse) => {\n        if (error.status === 401) {\n          this.toastr.error('Wrong Email or Password', 'Failed to login');\n        } else {\n          this.toastr.error(error.message, 'Failed to login');\n        }\n      }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}